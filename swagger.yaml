openapi: 3.0.3
info:
  title: Authentication & Authorization API
  version: 1.0.0
  description: |
    Comprehensive API for user authentication, authorization, and two-factor authentication (2FA).

    **Response Format:**
    - Success: `{ status: "success", data: {...} }`
    - Fail: `{ status: "fail", data: { message: "...", ...} }`
    - Error: `{ status: "error", message: "..." }`
  contact:
    name: Ahmed Reda
    url: https://github.com/AhmedRedaG/Authentication-Authorization-CAT
    email: ahmedrf.dev@gmail.com

servers:
  - url: http://localhost:3000/api/v1/
    description: Local server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    Cookies:
      type: apiKey
      in: cookie
      name: refreshToken

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: "60d0fe4f5311236168a109ca"
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "john@example.com"
        role:
          type: string
          enum: [user, admin]
          example: "user"

    RegisterRequest:
      type: object
      required: [name, email, password, confirmPassword]
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 256
          example: "Ahmed Reda"
        email:
          type: string
          format: email
          example: "ahmed@example.com"
        password:
          type: string
          format: password
          example: "Password123!"
        confirmPassword:
          type: string
          format: password
          example: "Password123!"

    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
          example: "ahmed@example.com"
        password:
          type: string
          format: password
          example: "Password123!"

    ChangePasswordRequest:
      type: object
      required: [oldPassword, newPassword]
      properties:
        oldPassword:
          type: string
          format: password
          example: "OldPassword123!"
        newPassword:
          type: string
          format: password
          example: "NewPassword123!"
        TFACode:
          description: "Two-Factor Authentication code if 2FA is enabled"
          type: string
          example: "123456"

    EmailRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
          format: email
          example: "ahmed@example.com"

    PasswordRequest:
      type: object
      required: [password]
      properties:
        password:
          type: string
          format: password
          example: "NewPassword123!"

    TFASetupSmsRequest:
      type: object
      required: [phoneNumber]
      properties:
        phoneNumber:
          type: string
          example: "+1234567890"

    TFAInput:
      type: object
      required: [method, TFACode]
      properties:
        method:
          type: string
          enum: [sms, totp, backup]
          example: "sms"
        TFACode:
          type: string
          example: "123456"

    TFAVerifySetupRequest:
      type: object
      required: [method, TFACode]
      properties:
        method:
          type: string
          enum: [sms, totp]
          example: "sms"
        TFACode:
          type: string
          example: "123456"
        enable:
          type: boolean
          example: true

    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object

    FailResponse:
      type: object
      properties:
        status:
          type: string
          example: fail
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: "Internal server error"

security:
  - BearerAuth: []
  - Cookies: []

tags:
  - name: Auth (Local)
    description: Local authentication endpoints
  - name: Auth (Google)
    description: Google OAuth2 authentication endpoints
  - name: Auth (Password)
    description: Password management endpoints
  - name: Auth (2FA)
    description: Two-factor authentication endpoints
  - name: User
    description: User endpoints

paths:
  # Auth (Local)
  /auth/local/register:
    post:
      tags: [Auth (Local)]
      summary: Register a new user
      description: Register a new user with name, email, and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  userSafeData:
                    _id: "60d0fe4f5311236168a109ca"
                    name: "Ahmed Reda"
                    email: "ahmed@example.com"
                    role: "user"
                  message: "Verification email sent."
        "409":
          description: Email already in use
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Email already in use"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Data"
                  email: "Email must be valid"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security: []

  /auth/local/verify/{verifyToken}:
    patch:
      tags: [Auth (Local)]
      summary: Verify user email
      description: Verify a user's email address using a verification token.
      parameters:
        - in: path
          name: verifyToken
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Email verified successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  message: "Email verified successfully."
        "403":
          description: Invalid or expired token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                token_expired:
                  summary: "Token Expired"
                  description: "The verification token has expired"
                  value:
                    status: fail
                    data:
                      message: "Access token expired"
                invalid_format:
                  summary: "Invalid Format"
                  description: "The token format is invalid"
                  value:
                    status: fail
                    data:
                      message: "Invalid Authorization format"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "User not found with the provided ID"
        "409":
          description: User already verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "User already verified"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security: []

  /auth/local/login:
    post:
      tags: [Auth (Local)]
      summary: Login with email and password
      description: Authenticate user and return JWT access and refresh tokens.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Login successful or two-factor authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              examples:
                login_success:
                  summary: "Successful login"
                  description: "User logged in successfully without 2FA"
                  value:
                    status: success
                    data:
                      accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      userSafeData:
                        _id: "60d0fe4f5311236168a109ca"
                        name: "Ahmed Reda"
                        email: "ahmed@example.com"
                        role: "user"
                      message: "Login successful"
                two_factor_required:
                  summary: "2FA Required"
                  description: "Two-factor authentication is required"
                  value:
                    status: success
                    data:
                      method: "sms"
                      tempToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      message: "Two-factor authentication required"
        "401":
          description: Invalid credentials or account not verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid email or password"
              example:
                status: fail
                data:
                  message: "This account was registered with Google."
              example:
                status: fail
                data:
                  message: "Account not verified, please check your email for verification link."
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Data"
                  email: "Email must be valid"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security: []

  /auth/local/refresh:
    post:
      tags: [Auth (Local)]
      summary: Refresh JWT access token
      description: Refresh the JWT access token using a valid refresh token (sent via cookie).
      responses:
        "200":
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  message: "Token refreshed successfully"
        "401":
          description: no refresh token exist in the cookie
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "No oldRefreshToken exist"
        "403":
          description: Invalid or expired token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                token_expired:
                  summary: "Token Expired"
                  description: "The access token has expired"
                  value:
                    status: fail
                    data:
                      message: "Access token expired"
                invalid_format:
                  summary: "Invalid Format"
                  description: "The authorization format is invalid"
                  value:
                    status: fail
                    data:
                      message: "Invalid Authorization format"
                invalid_refresh:
                  summary: "Invalid Refresh Token"
                  description: "The refresh token is invalid"
                  value:
                    status: fail
                    data:
                      message: "Invalid refresh token"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "User not found with the provided ID"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - Cookies: []

  /auth/local/logout:
    delete:
      tags: [Auth (Local)]
      summary: Logout user
      description: Logout the user and clear refresh token cookie.
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  message: "User logged out successfully"
        "400":
          description: already logged out
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Already logged out"
        "403":
          description: Invalid or expired token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                token_expired:
                  summary: "Token Expired"
                  description: "The access token has expired"
                  value:
                    status: fail
                    data:
                      message: "Access token expired"
                invalid_format:
                  summary: "Invalid Format"
                  description: "The authorization format is invalid"
                  value:
                    status: fail
                    data:
                      message: "Invalid Authorization format"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "User not found with the provided ID"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security: []

  # Auth (Google)
  /auth/google:
    get:
      tags: [Auth (Google)]
      summary: Google OAuth2 login
      description: Redirects user to Google for authentication.
      responses:
        "302":
          description: Redirect to Google OAuth2
      security: []

  /auth/google/callback:
    get:
      tags: [Auth (Google)]
      summary: Google OAuth2 callback
      description: Handles Google OAuth2 callback and authenticates user.
      responses:
        "200":
          description: Login successful or two-factor authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              examples:
                login_success:
                  summary: "Successful login"
                  description: "User logged in successfully without 2FA"
                  value:
                    status: success
                    data:
                      accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      userSafeData:
                        _id: "60d0fe4f5311236168a109ca"
                        name: "Ahmed Reda"
                        email: "ahmed@example.com"
                        role: "user"
                      message: "Login successful"
                two_factor_required:
                  summary: "2FA Required"
                  description: "Two-factor authentication is required"
                  value:
                    status: success
                    data:
                      method: "sms"
                      tempToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      message: "Two-factor authentication required"        
        "401":
          description: Invalid Google credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Google credentials"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security: []

  # Auth (Password)
  /auth/password/change:
    patch:
      tags: [Auth (Password)]
      summary: Change user password
      description: Change the password for an authenticated user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
      responses:
        "200":
          description: Password changed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  message: "Password has been successfully changed."
        "400":
          description: Invalid new password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "New password must be different from old password"
        "401":
          description: Invalid Authorization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                missing_header:
                  summary: "Missing Authorization"
                  description: "The authorization header is missing"
                  value:
                    status: fail
                    data:
                      message: "Authorization header is missing"
                invalid_format:
                  summary: "Invalid Format"
                  description: "The authorization format is invalid"
                  value:
                    status: fail
                    data:
                      message: "Invalid Authorization format"
                tfa_required:
                  summary: "2FA Required"
                  description: "Two-factor authentication code is required"
                  value:
                    status: fail
                    data:
                      message: "2FA code is required"
                wrong_password:
                  summary: "Wrong Password"
                  description: "The old password is incorrect"
                  value:
                    status: fail
                    data:
                      message: "Old password is wrong"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "User not found with the provided ID"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Data"
                  oldPassword: "Password must be valid"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []

  /auth/password/reset:
    post:
      tags: [Auth (Password)]
      summary: Request password reset
      description: Send a password reset email to the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailRequest"
      responses:
        "200":
          description: Password reset email sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  message: "If an account exists for this email, a password reset link has been sent."
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Data"
                  email: "Email must be valid"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security: []

  /auth/password/reset/{resetToken}:
    patch:
      tags: [Auth (Password)]
      summary: Reset password
      description: Reset the user's password using a reset token.
      parameters:
        - in: path
          name: resetToken
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordRequest"
      responses:
        "200":
          description: Password reset successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  message: "Password has been successfully reset."
        "401":
          description: Invalid Authorization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                missing_header:
                  summary: "Missing Authorization"
                  description: "The authorization header is missing"
                  value:
                    status: fail
                    data:
                      message: "Authorization header is missing"
                invalid_format:
                  summary: "Invalid Format"
                  description: "The authorization format is invalid"
                  value:
                    status: fail
                    data:
                      message: "Invalid Authorization format"
        "403":
          description: Used token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Reset token is already used"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "User not found with the provided ID"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Data"
                  password: "Password must be valid"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security: []

  # Auth (2FA)
  /auth/2fa/setup/sms:
    put:
      tags: [Auth (2FA)]
      summary: Set phone number for SMS 2FA
      description: Set up a phone number for SMS two-factor authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TFASetupSmsRequest"
      responses:
        "200":
          description: Phone number set successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  phoneNumber: "+1234567890"
                  message: "Phone number has been set successfully for 2FA setup"
        "401":
          description: Invalid Authorization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                missing_header:
                  summary: "Missing Authorization"
                  description: "The authorization header is missing"
                  value:
                    status: fail
                    data:
                      message: "Authorization header is missing"
                invalid_format:
                  summary: "Invalid Format"
                  description: "The authorization format is invalid"
                  value:
                    status: fail
                    data:
                      message: "Invalid Authorization format"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "User not found with the provided ID"
        "409":
          description: Phone number already set
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Phone number already set and 2fa is activated"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Data"
                  phoneNumber: "Phone number must be valid"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []

  /auth/2fa/setup/totp:
    put:
      tags: [Auth (2FA)]
      summary: Generate TOTP secret
      description: Generate a TOTP secret and QR code for authenticator app setup.
      responses:
        "200":
          description: TOTP secret generated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  secret: "JBSWY3DPEHPK3PXP"
                  qrCodeDataURL: "data:image/png;base64,..."
                  message: "TOTP secret generated successfully"
        "401":
          description: Invalid Authorization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                missing_header:
                  summary: "Missing Authorization"
                  description: "The authorization header is missing"
                  value:
                    status: fail
                    data:
                      message: "Authorization header is missing"
                invalid_format:
                  summary: "Invalid Format"
                  description: "The authorization format is invalid"
                  value:
                    status: fail
                    data:
                      message: "Invalid Authorization format"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "User not found with the provided ID"
        "409":
          description: TOTP already set
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "totp already set and 2fa is activated"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []

  /auth/2fa/setup:
    post:
      tags: [Auth (2FA)]
      summary: Verify and enable 2FA setup
      description: Verify the setup of SMS or TOTP 2FA method and optionally enable it.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TFAVerifySetupRequest"
      responses:
        "200":
          description: 2FA verified successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  method: "sms"
                  message: "sms 2FA has been verified successfully"
        "400":
          description: missing secret or phone number in user data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                missing_secret:
                  value:
                    status: fail
                    data:
                      message: "No secret found for TOTP verification"
                missing_phone_number:
                  value:
                    status: fail
                    data:
                      message: "No phone number found for SMS verification"  
        "401":
          description: Invalid Authorization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                missing_header:
                  summary: "Missing Authorization"
                  description: "The authorization header is missing"
                  value:
                    status: fail
                    data:
                      message: "Authorization header is missing"
                invalid_format:
                  summary: "Invalid Format"
                  description: "The authorization format is invalid"
                  value:
                    status: fail
                    data:
                      message: "Invalid Authorization format"
                using_backup_code:
                  summary: "Using Backup Code"
                  description: "This action cannot be done using backup code"
                  value:
                    status: fail
                    data:
                      message: "This action cant be done using backup code"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "User not found with the provided ID"
        "409":
          description: Method already verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "sms 2FA already verified"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Data"
                  method: "Method must be sms or totp"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      
    delete:
      tags: [Auth (2FA)]
      summary: Remove 2FA setup
      description: Remove the setup of SMS or TOTP 2FA method.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TFAInput"
      responses:
        "200":
          description: 2FA setup removed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  method: "sms"
                  message: "sms 2FA has been revoked successfully"
        "401":
          description: Invalid Authorization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                missing_header:
                  summary: "Missing Authorization"
                  description: "The authorization header is missing"
                  value:
                    status: fail
                    data:
                      message: "Authorization header is missing"
                invalid_format:
                  summary: "Invalid Format"
                  description: "The authorization format is invalid"
                  value:
                    status: fail
                    data:
                      message: "Invalid Authorization format"
                using_backup_code:
                  summary: "Using Backup Code"
                  description: "This action cannot be done using backup code"
                  value:
                    status: fail
                    data:
                      message: "This action cant be done using backup code"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "User not found with the provided ID"
        "409":
          description: Method not set up
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "sms 2FA is not setup"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Data"
                  method: "Method must be sms or totp"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []

  /auth/2fa:
    get:
      tags: [Auth (2FA)]
      summary: Get current 2FA status
      description: Get the current 2FA status and method.
      responses:
        "200":
          description: Current 2FA status retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  status: true
                  method: "sms"
                  message: "Current 2FA status is true and method is sms"
        "401":
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Not authenticated"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    post:
      tags: [Auth (2FA)]
      summary: Enable 2FA
      description: Enable 2FA after verifying the setup. Returns backup codes for account recovery.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TFAInput"
      responses:
        "200":
          description: 2FA enabled successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  backupCodes: ["12345678", "23456789"]
                  message: "sms 2FA has been enabled successfully"
        "401":
          description: Authentication or verification error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                auth_error:
                  value:
                    status: fail
                    data:
                      message: "Not authenticated"
                verify_error:
                  value:
                    status: fail
                    data:
                      message: "Invalid 2FA token"
        "409":
          description: 2FA already enabled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "sms 2FA already enabled"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Data"
                  method: "Method must be sms or totp"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    delete:
      tags: [Auth (2FA)]
      summary: Disable 2FA
      description: Disable 2FA after verifying the code.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TFAInput"
      responses:
        "200":
          description: 2FA disabled successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  message: "sms 2FA has been disabled successfully"
        "401":
          description: Authentication or verification error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                auth_error:
                  value:
                    status: fail
                    data:
                      message: "Not authenticated"
                verify_error:
                  value:
                    status: fail
                    data:
                      message: "Invalid 2FA token"
        "409":
          description: 2FA already disabled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "2FA already disabled"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Data"
                  method: "Method must be valid"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []

  /auth/2fa/backup-codes:
    post:
      tags: [Auth (2FA)]
      summary: Regenerate backup codes
      description: Regenerate backup codes for account recovery after verifying 2FA.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TFAInput"
      responses:
        "200":
          description: Backup codes regenerated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  backupCodes: ["12345678", "23456789"]
                  message: "Backup codes regenerated successfully"
        "401":
          description: Authentication or verification error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                auth_error:
                  value:
                    status: fail
                    data:
                      message: "Not authenticated"
                verify_error:
                  value:
                    status: fail
                    data:
                      message: "Invalid 2FA token"
        "409":
          description: 2FA not enabled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "2FA is not enabled"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Data"
                  method: "Method must be valid"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []

  /auth/2fa/sms/verify:
    post:
      tags: [Auth (2FA)]
      summary: Send SMS verification code
      description: Send a new SMS verification code for 2FA (requires authentication).
      responses:
        "200":
          description: SMS code sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  phoneNumber: "*******890"
                  TFAExpiredAt: "2023-07-16T12:00:00.000Z"
                  message: "Verification code sent successfully via SMS"
        "401":
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Not authenticated"
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Can't send SMS right now, try again later"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []

  /auth/2fa/sms/temp:
    post:
      tags: [Auth (2FA)]
      summary: Send SMS verification code (with temp token)
      description: Send a new SMS verification code for 2FA during login (requires temp token).
      responses:
        "200":
          description: SMS code sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  phoneNumber: "*******890"
                  TFAExpiredAt: "2023-07-16T12:00:00.000Z"
                  message: "Verification code sent successfully via SMS"
        "401":
          description: Invalid or expired temp token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid temp token"
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Can't send SMS right now, try again later"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []

  /auth/2fa/verify:
    post:
      tags: [Auth (2FA)]
      summary: Verify 2FA code during login
      description: Verify 2FA code or backup code during login process (requires temp token).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TFAInput"
      responses:
        "200":
          description: 2FA verified successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: success
                data:
                  accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  userSafeData:
                    _id: "60d0fe4f5311236168a109ca"
                    name: "Ahmed Reda"
                    email: "ahmed@example.com"
                    role: "user"
                  message: "Two-factor authentication verified successfully"
        "401":
          description: Invalid temp token or verification error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              examples:
                temp_token_error:
                  value:
                    status: fail
                    data:
                      message: "Invalid temp token"
                verify_error:
                  value:
                    status: fail
                    data:
                      message: "Invalid 2FA token"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Invalid Data"
                  method: "Method must be valid"
        "429":
          description: Too many attempts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
              example:
                status: fail
                data:
                  message: "Account temporarily locked due to too many failed attempts"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security: []
